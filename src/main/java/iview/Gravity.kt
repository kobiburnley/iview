package iview

object Gravity {
    const val NO_GRAVITY = 0x0000
    const val AXIS_SPECIFIED = 0x0001
    const val AXIS_PULL_BEFORE = 0x0002
    const val AXIS_PULL_AFTER = 0x0004
    const val AXIS_CLIP = 0x0008
    const val AXIS_X_SHIFT = 0
    const val AXIS_Y_SHIFT = 4
    const val TOP = AXIS_PULL_BEFORE or AXIS_SPECIFIED shl AXIS_Y_SHIFT
    const val BOTTOM = AXIS_PULL_AFTER or AXIS_SPECIFIED shl AXIS_Y_SHIFT
    const val LEFT = AXIS_PULL_BEFORE or AXIS_SPECIFIED shl AXIS_X_SHIFT
    const val RIGHT = AXIS_PULL_AFTER or AXIS_SPECIFIED shl AXIS_X_SHIFT
    const val CENTER_VERTICAL = AXIS_SPECIFIED shl AXIS_Y_SHIFT
    const val FILL_VERTICAL = TOP or BOTTOM
    const val CENTER_HORIZONTAL = AXIS_SPECIFIED shl AXIS_X_SHIFT
    const val FILL_HORIZONTAL = LEFT or RIGHT
    const val CENTER = CENTER_VERTICAL or CENTER_HORIZONTAL
    const val FILL = FILL_VERTICAL or FILL_HORIZONTAL
    const val CLIP_VERTICAL = AXIS_CLIP shl AXIS_Y_SHIFT
    const val CLIP_HORIZONTAL = AXIS_CLIP shl AXIS_X_SHIFT
    const val RELATIVE_LAYOUT_DIRECTION = 0x00800000
    const val HORIZONTAL_GRAVITY_MASK = AXIS_SPECIFIED or AXIS_PULL_BEFORE or AXIS_PULL_AFTER shl AXIS_X_SHIFT
    const val VERTICAL_GRAVITY_MASK = AXIS_SPECIFIED or AXIS_PULL_BEFORE or AXIS_PULL_AFTER shl AXIS_Y_SHIFT
    const val DISPLAY_CLIP_VERTICAL = 0x10000000
    const val DISPLAY_CLIP_HORIZONTAL = 0x01000000
    const val START = RELATIVE_LAYOUT_DIRECTION or LEFT
    const val END = RELATIVE_LAYOUT_DIRECTION or RIGHT
    const val RELATIVE_HORIZONTAL_GRAVITY_MASK = START or END
}
